name: Weekly Open Data Monitor

on:
  schedule:
    - cron: '0 9 * * 0'
  workflow_dispatch:

permissions:
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SERPAPI_KEY: ${{ secrets.SERPAPI_KEY }}
      GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install openai serpapi google-auth google-auth-oauthlib google-auth-httplib2 requests python-dotenv

      - name: Run weekly report notebook
        run: |
          pip install jupyter nbconvert
          mkdir -p reports
          # Execute the notebook in place (donâ€™t save script copy to reports/)
          jupyter nbconvert --execute --to notebook --allow-errors \
            --output "Open_AI_Sci_Policy_executed.ipynb" \
            Open_AI_Sci_Policy.ipynb

      - name: Commit and push report
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Stage both Markdown and text reports
          git add reports/*.md reports/*.txt || echo "No report files to add"

          # Commit if there are changes
          git commit -m "ðŸ§¾ Weekly Open Data Report $(date -u +'%Y-%m-%d')" || echo "No changes to commit"

          # Push changes back to the repository
          git push
          
      - name: Send email notification
        run: python send_email_notification.py
